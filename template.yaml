AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

###############################################################################
# GLOBALS
###############################################################################
Globals:
  Function:
    Runtime: python3.12
    Timeout: 10
    MemorySize: 256
    Layers:
      - !Ref CommonLayer       # Todas las Lambdas heredan la capa
    Environment:
      Variables:
        # Variables disponibles en todas las Lambdas
        JWT_SECRET: "dev_secret"
        JWT_ALGORITHM: "HS256"
        MONGODB_DB_NAME: "demo"
        MONGODB_URI: "mongodb+srv://user-demo:sCEVRRjfDzUi8Ve7@crm.oeswogj.mongodb.net/demo?retryWrites=true&w=majority&tls=true"

###############################################################################
# API HTTP
###############################################################################
Resources:

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: Prod
      CorsConfiguration:
        AllowOrigins: ["*"]
        AllowMethods: [POST]
        AllowHeaders: [Content-Type, Authorization]

###############################################################################
# LAYER con código compartido
###############################################################################
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layer/          # debe contener requirements.txt y python/
      CompatibleRuntimes: [python3.12]
    Metadata:
      BuildMethod: python3.12     # SAM instalará requirements.txt en la layer

###############################################################################
# FUNCIÓN PRINCIPAL (APP)
###############################################################################
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Layers:
        - !Ref CommonLayer
      Events:
        HttpApiLogin:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /login
            Method: POST
        HttpApiForgotPassword:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /forgot-password
            Method: POST
        HttpApiRefreshToken:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /refresh-token
            Method: POST
        HttpApiRegister:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /register
            Method: POST
        HttpApiValidateToken:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /validate-token
            Method: POST
        HttpApiLogout:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /logout
            Method: POST
        HttpApiSendValidationEmail:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /send-validation-email
            Method: POST
        HttpApiValidateEmail:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /validate-email
            Method: POST

###############################################################################
# OUTPUTS
###############################################################################
Outputs:
  ApiBaseUrl:
    Description: "URL base del API local/AWS"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  LoginUrl:
    Description: "Endpoint de login"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/login"
  ForgotPasswordUrl:
    Description: "Endpoint de forgot-password"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/forgot-password"
  RefreshTokenUrl:
    Description: "Endpoint de refresh-token"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/refresh-token"
